name: CI
on:
  push:
    branches: [ main, feat/prisma-crud ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          check-latest: true
          
      - name: Install dependencies with multiple fallbacks
        run: |
          # Try npm ci first
          if npm ci --legacy-peer-deps; then
            echo "npm ci succeeded"
          else
            echo "npm ci failed, trying fresh install..."
            rm -rf node_modules package-lock.json
            npm install --legacy-peer-deps || {
              echo "Fresh install failed, trying without optional deps..."
              npm install --no-optional --legacy-peer-deps
            }
          fi
          
      - name: Manually install Rollup platform package
        run: |
          npm install @rollup/rollup-linux-x64-gnu --no-save || true
          
      - name: Generate Prisma Client
        run: npm run prisma:generate
        env:
          DATABASE_URL: 'file:./prisma/dev.db'
          
      - name: Apply database migrations
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: 'file:./prisma/dev.db'
          
      - name: Lint
        run: npm run lint
        
      - name: Typecheck
        run: npm run typecheck
        
      - name: Build
        run: npm run build
        
      - name: Test
        run: npm test
        env:
          DATABASE_URL: 'file:./prisma/dev.db'
